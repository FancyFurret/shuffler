@inherits LayoutComponentBase
@using Shuffler.Core
@using Shuffler.UI.Components.Common

<Styles />

@code {
    private bool _showLogs = false;
    private string _logPanelHeight = "300px";
    private bool _isDragging = false;
    private double _startY;
    private double _startHeight;

    private void ToggleLogs()
    {
        _showLogs = !_showLogs;
    }

    private void OnMouseDown(MouseEventArgs e)
    {
        _isDragging = true;
        _startY = e.ClientY;
        _startHeight = double.Parse(_logPanelHeight.TrimEnd('p', 'x'));
    }

    private void OnMouseMove(MouseEventArgs e)
    {
        if (!_isDragging) return;

        var deltaY = _startY - e.ClientY;
        var newHeight = _startHeight + deltaY;

        // Constrain height between 100px and 80% of viewport
        newHeight = Math.Max(100, Math.Min(newHeight, 800));
        _logPanelHeight = $"{newHeight}px";
    }

    private void OnMouseUp()
    {
        _isDragging = false;
    }
}

<Portal>
    <ConfirmDialog />
    <div class="relative min-h-screen bg-background-900 text-foreground-50">
        <div class="flex h-screen" @onmousemove="OnMouseMove" @onmouseup="OnMouseUp">
            <div class="w-[275px] relative z-10 shadow-2xl shadow-black/50">
                <NavMenu />
            </div>

            <main class="flex-1 overflow-hidden relative flex flex-col">
                <!-- Main Content Background -->
                <div class="background-elements">
                    <div class="glow-orbs"></div>
                    <div class="gradient-overlay"></div>
                </div>

                <!-- Main Content -->
                <div class="relative z-10 flex-1 min-h-0 p-0 overflow-auto">
                    @Body
                </div>

                <!-- Log Panel -->
                @if (_showLogs)
                {
                    <div class="relative z-10 border-t border-background-600" style="height: @_logPanelHeight">
                        <!-- Resize Handle -->
                        <div class="absolute -top-1.5 left-0 right-0 h-3 cursor-ns-resize bg-transparent hover:bg-background-400/20"
                            @onmousedown="OnMouseDown" @ondragstart:preventDefault>
                            <div
                                class="absolute left-1/2 -translate-x-1/2 top-1/2 -translate-y-1/2 w-16 h-1 rounded-full bg-background-400/50">
                            </div>
                        </div>

                        <div class="h-full overflow-hidden">
                            <LogPanel />
                        </div>
                    </div>
                }

                <!-- Log Toggle Button -->
                <button @onclick="ToggleLogs"
                    class="absolute bottom-2 right-2 z-20 p-2 rounded-lg bg-background-700/90 hover:bg-background-600/90 backdrop-blur-sm border border-background-600/50 shadow-lg transition-all">
                    <div class="w-5 h-5 text-foreground-400">
                        @if (_showLogs)
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                                stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                    d="M19.5 5.25l-7.5 7.5-7.5-7.5m15 6l-7.5 7.5-7.5-7.5" />
                            </svg>
                        }
                        else
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                                stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                    d="M4.5 12.75l7.5-7.5 7.5 7.5m-15 6l7.5-7.5 7.5 7.5" />
                            </svg>
                        }
                    </div>
                </button>
            </main>
        </div>
    </div>
</Portal>

<style>
    /* Background Elements */
    .background-elements {
        position: absolute;
        inset: 0;
        overflow: hidden;
        z-index: 0;
    }

    .gradient-overlay {
        position: absolute;
        inset: 0;
        background: linear-gradient(180deg,
                rgba(13, 13, 13, 0.85) 0%,
                rgba(24, 24, 27, 0.9) 100%);
        backdrop-filter: blur(12px);
    }

    .glow-orbs {
        position: absolute;
        inset: 0;
    }

    .glow-orbs::before,
    .glow-orbs::after {
        content: '';
        position: absolute;
        width: 400px;
        height: 400px;
        border-radius: 50%;
        filter: blur(100px);
        animation: moveOrbs 10s ease-in-out infinite;
    }

    .glow-orbs::before {
        background: rgba(147, 51, 234, 0.4);
        top: -200px;
        left: -200px;
    }

    .glow-orbs::after {
        background: rgba(236, 72, 153, 0.4);
        bottom: -200px;
        right: -200px;
        animation-delay: -5s;
    }

    @@keyframes moveOrbs
    {

        0%,
        100% {
            transform: translate(0, 0);
        }

        50% {
            transform: translate(30px, 30px);
        }
    }
</style>