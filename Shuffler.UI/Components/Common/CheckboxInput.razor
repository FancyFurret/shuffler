@using Blazor.Heroicons
@using Microsoft.AspNetCore.Components.Forms

@inherits InputBase<bool>

<div class="relative">
    <label class="flex items-center gap-3 cursor-pointer">
        <div class="relative w-5 h-5">
            <input type="checkbox" @bind="CurrentValue" @bind:event="oninput" @attributes="AdditionalAttributes"
                class="absolute opacity-0 w-0 h-0" />
            <div class="w-5 h-5 rounded-md border border-primary flex items-center justify-center">
                <Heroicon Name="check" Type="HeroiconType.Solid"
                    class="@($"w-4 h-4 text-primary transition-all duration-200 transform {(CurrentValue ? "scale-100 opacity-100" : "scale-75 opacity-0")}")" />
            </div>
        </div>
        <span class="label-text">@Label</span>
    </label>
</div>

@code {
    [Parameter] public required string Label { get; set; }

    protected override bool TryParseValueFromString(string? value, out bool result, out string? validationErrorMessage)
    {
        if (bool.TryParse(value, out result))
        {
            validationErrorMessage = null;
            return true;
        }

        validationErrorMessage = $"The {FieldIdentifier.FieldName} field must be a valid boolean.";
        return false;
    }
}